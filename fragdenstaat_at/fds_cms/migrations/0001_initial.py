# Generated by Django 2.1.8 on 2019-04-19 23:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import cms.models.fields
import filer.fields.image


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("taggit", "0002_auto_20150616_2121"),
        migrations.swappable_dependency(settings.FILINGCABINET_DOCUMENT_MODEL),
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
        ("cms", "0022_auto_20180620_1551"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DocumentEmbedCMSPlugin",
            fields=[
                (
                    "cmsplugin_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        related_name="fds_cms_documentembedcmsplugin",
                        serialize=False,
                        to="cms.CMSPlugin",
                    ),
                ),
                (
                    "doc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to=settings.FILINGCABINET_DOCUMENT_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("cms.cmsplugin",),
        ),
        migrations.CreateModel(
            name="DocumentPagesCMSPlugin",
            fields=[
                (
                    "cmsplugin_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        related_name="fds_cms_documentpagescmsplugin",
                        serialize=False,
                        to="cms.CMSPlugin",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255)),
                ("pages", models.CharField(blank=True, max_length=255)),
                (
                    "doc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to=settings.FILINGCABINET_DOCUMENT_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("cms.cmsplugin",),
        ),
        migrations.CreateModel(
            name="FoiRequestListCMSPlugin",
            fields=[
                (
                    "cmsplugin_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        related_name="fds_cms_foirequestlistcmsplugin",
                        serialize=False,
                        to="cms.CMSPlugin",
                    ),
                ),
                (
                    "resolution",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("successful", "Request Successful"),
                            ("partially_successful", "Request partially successful"),
                            ("not_held", "Information not held"),
                            ("refused", "Request refused"),
                            (
                                "user_withdrew_costs",
                                "Request was withdrawn due to costs",
                            ),
                            ("user_withdrew", "Request was withdrawn"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "awaiting_user_confirmation",
                                "Awaiting user confirmation",
                            ),
                            ("publicbody_needed", "Public Body needed"),
                            (
                                "awaiting_publicbody_confirmation",
                                "Awaiting Public Body confirmation",
                            ),
                            ("awaiting_response", "Awaiting response"),
                            (
                                "awaiting_classification",
                                "Request awaits classification",
                            ),
                            ("asleep", "Request asleep"),
                            ("resolved", "Request resolved"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "number_of_entries",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="0 means all the entries",
                        verbose_name="number of entries",
                    ),
                ),
                (
                    "offset",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="number of entries to skip from top of list",
                        verbose_name="offset",
                    ),
                ),
                (
                    "template",
                    models.CharField(
                        blank=True,
                        choices=[("", "Default template")],
                        help_text="template used to display the plugin",
                        max_length=250,
                        verbose_name="template",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="publicbody.Category",
                    ),
                ),
                (
                    "classification",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="publicbody.Classification",
                    ),
                ),
                (
                    "jurisdiction",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="publicbody.Jurisdiction",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="foirequest.FoiProject",
                    ),
                ),
                (
                    "publicbody",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="publicbody.PublicBody",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, to="taggit.Tag", verbose_name="tags"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("cms.cmsplugin",),
        ),
        migrations.CreateModel(
            name="PageAnnotationCMSPlugin",
            fields=[
                (
                    "cmsplugin_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        related_name="fds_cms_pageannotationcmsplugin",
                        serialize=False,
                        to="cms.CMSPlugin",
                    ),
                ),
                (
                    "page_annotation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="filingcabinet.PageAnnotation",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("cms.cmsplugin",),
        ),
        migrations.CreateModel(
            name="PrimaryLinkCMSPlugin",
            fields=[
                (
                    "cmsplugin_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        related_name="fds_cms_primarylinkcmsplugin",
                        serialize=False,
                        to="cms.CMSPlugin",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "url",
                    models.CharField(
                        blank=True,
                        help_text="if present image will be clickable",
                        max_length=255,
                        null=True,
                        verbose_name="link",
                    ),
                ),
                (
                    "anchor",
                    models.CharField(
                        blank=True,
                        help_text="Page anchor.",
                        max_length=128,
                        verbose_name="anchor",
                    ),
                ),
                (
                    "template",
                    models.CharField(
                        blank=True,
                        choices=[("", "Default template")],
                        default="",
                        max_length=50,
                        verbose_name="Template",
                    ),
                ),
                (
                    "image",
                    filer.fields.image.FilerImageField(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.FILER_IMAGE_MODEL,
                        verbose_name="image",
                    ),
                ),
                (
                    "page_link",
                    cms.models.fields.PageField(
                        blank=True,
                        help_text="if present image will be clickable",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="cms.Page",
                        verbose_name="page link",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("cms.cmsplugin",),
        ),
    ]
